<%= form_with(model: visit, local: true) do |form| %>
  <% if visit.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(visit.errors.count, "error") %> prohibited this visit from being saved:</h2>
      <ul>
        <% visit.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Campo de CPF para consulta -->
  <div>
    <%= form.label :cpf, "CPF do Visitante", style: "display: block" %>
    <%= form.text_field :cpf, id: "visitor_cpf" %>
  </div>

  <!-- Campos para os dados do visitante (serão preenchidos automaticamente) -->
  <div id="visitor_details" style="display: none;">
    <div>
      <strong>Nome:</strong> <span id="visitor_name"></span>
    </div>
    <div>
      <strong>RG:</strong> <span id="visitor_rg"></span>
    </div>
    <div>
      <strong>Telefone:</strong> <span id="visitor_phone"></span>
    </div>
    <div>
      <strong>Situação:</strong> <span id="visitor_active"></span>
    </div>
  </div>

  <!-- Campo oculto para enviar o visitor_id -->
  <%= form.hidden_field :visitor_id, id: "visitor_id" %>

  <!-- Campo oculto para enviar a unidade correta -->
  <%= form.hidden_field :unit_id, value: current_user.unit_id %>

  <!-- Seleção do Setor (Filtrado pela Unidade) -->
  <div>
    <%= form.label :sector_id, style: "display: block" %>
    <%= form.collection_select :sector_id, @sectors, :id, :name, { prompt: "Selecione um setor" }, { id: "sector_select" } %>
  </div>

  <!-- Seleção do Funcionário -->
  <div>
    <%= form.label :employee_id, style: "display: block" %>
    <%= form.collection_select :employee_id, @employees_by_sector.values.flatten, :id, :name, { prompt: "Selecione um funcionário" }, { class: "select2" } %>
  </div>

  <!-- Data e Hora da Visita -->
  <div>
    <%= form.label :visit_time, style: "display: block" %>
    <%= form.datetime_field :visit_time, value: @visit.visit_time %>
  </div>

  <div>
    <%= form.submit "Salvar Visita", id: "save_visit_button", disabled: true %>
  </div>
<% end %>

<!-- Script para buscar o visitante pelo CPF -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const cpfField = document.getElementById("visitor_cpf");
    const visitorDetails = document.getElementById("visitor_details");
    const visitorName = document.getElementById("visitor_name");
    const visitorRg = document.getElementById("visitor_rg");
    const visitorPhone = document.getElementById("visitor_phone");
    const visitorIdField = document.getElementById("visitor_id");
    const visitorActive = document.getElementById("visitor_active");
    const saveButton = document.getElementById("save_visit_button");

    cpfField.addEventListener("input", function() {
      const cpf = this.value.replace(/\D/g, ""); // Remove caracteres não numéricos

      if (cpf.length === 11) { // Verifica se o CPF tem 11 dígitos
        fetch(`/visitors/search?cpf=${cpf}`)
          .then(response => response.json())
          .then(data => {
            if (data) {
              // Preenche os campos com os dados do visitante
              visitorName.textContent = data.name;
              visitorRg.textContent = data.rg;
              visitorPhone.textContent = data.phone;
              visitorIdField.value = data.id;
              visitorActive.textContent = data.active ? "Ativo" : "Inativo";
              visitorDetails.style.display = "block";

              if (data.active) {
                saveButton.disabled = false; // Habilita o botão se o visitante for ativo
              } else {
                saveButton.disabled = true; // Desabilita o botão se o visitante for inativo
                alert("Este visitante está inativo. Reative-o antes de registrar a visita.");
              }

            } else {
              // Limpa os campos se o visitante não for encontrado
              visitorName.textContent = "";
              visitorRg.textContent = "";
              visitorPhone.textContent = "";
              visitorIdField.value = "";
              visitorDetails.style.display = "none";
              saveButton.disabled = true; // Desabilita o botão se o visitante não existir
              alert("Visitante não encontrado. Por favor, cadastre-o primeiro.");
            }
          })
          .catch(error => {
            console.error("Erro ao buscar visitante:", error);
          });
      }
    });
  });
</script>